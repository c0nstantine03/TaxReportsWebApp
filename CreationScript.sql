-- MySQL Script generated by MySQL Workbench
-- Tue May  9 02:43:43 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema taxReports
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `taxReports` ;

-- -----------------------------------------------------
-- Schema taxReports
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `taxReports` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ;
USE `taxReports` ;

-- -----------------------------------------------------
-- Table `taxReports`.`role_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taxReports`.`role_list` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxReports`.`residency_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taxReports`.`residency_list` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxReports`.`person_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taxReports`.`person_list` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxReports`.`user_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taxReports`.`user_list` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `mail` VARCHAR(255) NOT NULL,
  `role_id` BIGINT UNSIGNED NOT NULL,
  `residency_id` BIGINT UNSIGNED NOT NULL,
  `person_id` BIGINT UNSIGNED NOT NULL,
  `is_enable` TINYINT NOT NULL DEFAULT 1,
  `created` TIMESTAMP NOT NULL DEFAULT NOW(),
  `modified` TIMESTAMP NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) VISIBLE,
  INDEX `fk_users_roles_idx` (`role_id` ASC) VISIBLE,
  INDEX `fk_users_residency1_idx` (`residency_id` ASC) VISIBLE,
  INDEX `fk_users_person1_idx` (`person_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_roles`
    FOREIGN KEY (`role_id`)
    REFERENCES `taxReports`.`role_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_residency1`
    FOREIGN KEY (`residency_id`)
    REFERENCES `taxReports`.`residency_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `taxReports`.`person_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxReports`.`status_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taxReports`.`status_list` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `closed` TINYINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxReports`.`report_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taxReports`.`report_list` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NOT NULL,
  `content` TEXT NOT NULL,
  `author_id` BIGINT UNSIGNED NOT NULL,
  `inspector_id` BIGINT UNSIGNED NULL,
  `supplied` TIMESTAMP NOT NULL DEFAULT NOW(),
  `updated` TIMESTAMP NOT NULL DEFAULT NOW(),
  `status_id` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reports_users1_idx` (`author_id` ASC) VISIBLE,
  INDEX `fk_reports_users2_idx` (`inspector_id` ASC) VISIBLE,
  INDEX `fk_reports_statuses1_idx` (`status_id` ASC) VISIBLE,
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE,
  CONSTRAINT `fk_reports_users1`
    FOREIGN KEY (`author_id`)
    REFERENCES `taxReports`.`user_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reports_users2`
    FOREIGN KEY (`inspector_id`)
    REFERENCES `taxReports`.`user_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reports_statuses1`
    FOREIGN KEY (`status_id`)
    REFERENCES `taxReports`.`status_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxReports`.`report_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taxReports`.`report_history` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NOT NULL,
  `content` TEXT NOT NULL,
  `author_id` BIGINT UNSIGNED NOT NULL,
  `inspector_id` BIGINT UNSIGNED NULL,
  `updated` TIMESTAMP NOT NULL DEFAULT NOW(),
  `status_id` BIGINT UNSIGNED NOT NULL,
  `comment` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_report_history_user_list1_idx` (`author_id` ASC) VISIBLE,
  INDEX `fk_report_history_user_list2_idx` (`inspector_id` ASC) VISIBLE,
  INDEX `fk_report_history_status_list1_idx` (`status_id` ASC) VISIBLE,
  CONSTRAINT `fk_report_history_user_list1`
    FOREIGN KEY (`author_id`)
    REFERENCES `taxReports`.`user_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_report_history_user_list2`
    FOREIGN KEY (`inspector_id`)
    REFERENCES `taxReports`.`user_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_report_history_status_list1`
    FOREIGN KEY (`status_id`)
    REFERENCES `taxReports`.`status_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxReports`.`next_statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taxReports`.`next_statuses` (
  `status_id` BIGINT UNSIGNED NOT NULL,
  `next_status_id` BIGINT UNSIGNED NOT NULL,
  INDEX `fk_next_statuses_status_list1_idx` (`status_id` ASC) VISIBLE,
  INDEX `fk_next_statuses_status_list2_idx` (`next_status_id` ASC) VISIBLE,
  CONSTRAINT `fk_next_statuses_status_list1`
    FOREIGN KEY (`status_id`)
    REFERENCES `taxReports`.`status_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_next_statuses_status_list2`
    FOREIGN KEY (`next_status_id`)
    REFERENCES `taxReports`.`status_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
